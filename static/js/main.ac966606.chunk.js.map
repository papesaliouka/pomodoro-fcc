{"version":3,"sources":["components/title/Title.component.jsx","context/timer/Timer.context.js","components/length-control/LengthControl.component.jsx","components/length-controller/LengthController.jsx","components/length-controllers-container/LengthControllersContainer.component.jsx","components/timer/Timer.component.jsx","components/timer-controllers/TimerControllers.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Title","className","TimerContext","createContext","TimerContextProvider","children","useState","isMuted","setIsMuted","sessionLength","setSessionLength","breakLength","setBreakLength","isSessionTime","setSessionTime","isBreakTime","setBreakTime","isPaused","setIsPaused","time","setTime","useEffect","Provider","value","incrementSessionLength","prev","decrementSessionLength","incrementBreakLength","decrementBreakLength","reset","audio","document","getElementById","currentTime","pause","LengthControl","type","useContext","onClick","id","toLowerCase","LengthController","LengthControllersContainer","formatTime","Timer","minutes","Math","floor","seconds","interval","useRef","countDown","play","current","setInterval","clearInterval","preload","src","TimerControllers","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ac966606.chunk.js","sourcesContent":["import './Title.styles.css';\n\nconst Title = ()=>{\n    return(\n        <div className='title'>\n            <h1>25 + 5 Clock</h1>\n        </div>\n    );\n}\n\nexport default Title;\n\n","import { useState, createContext, useEffect} from \"react\";\n\n\nexport const TimerContext = createContext();\n\nexport const TimerContextProvider = ({children})=>{\n\n    const [isMuted, setIsMuted] = useState(false)\n    const [sessionLength, setSessionLength] = useState(25);\n    const [breakLength, setBreakLength] = useState(5);\n    const [isSessionTime, setSessionTime] = useState(true);\n    const [isBreakTime, setBreakTime] = useState(false);\n    const [isPaused, setIsPaused] = useState(true);\n    const incrementSessionLength = ()=> setSessionLength(prev => prev < 60 ? prev + 1 : prev);\n    const decrementSessionLength = ()=> setSessionLength(prev => prev > 1 ? prev - 1 : prev);\n    const incrementBreakLength = ()=> setBreakLength(prev => prev < 60 ? prev + 1 : prev);\n    const decrementBreakLength = ()=> setBreakLength(prev => prev > 1 ? prev - 1 : prev);\n\n    const [time,setTime] = useState(sessionLength*60)\n\n    useEffect(()=>{\n        setTime(isSessionTime ? sessionLength*60:breakLength*60)\n    },[sessionLength,breakLength,isSessionTime])\n\n    const reset = ()=>{\n        setIsPaused(true);\n        setBreakLength(5);\n        setSessionLength(25);\n        setBreakTime(false);\n        setSessionTime(true);\n        setTime(sessionLength*60);\n        setIsMuted(true);\n        const audio = document.getElementById('beep');\n        audio.currentTime=0;\n        audio.pause();\n    }\n\n\n    return(\n        <TimerContext.Provider\n        value={{\n            sessionLength,incrementSessionLength,decrementSessionLength,\n            breakLength,incrementBreakLength,decrementBreakLength,\n            isSessionTime, setSessionTime,\n            isBreakTime, setBreakTime, reset,\n            isPaused, setIsPaused,setSessionLength, setBreakLength, time, setTime, isMuted\n        }}\n        >\n            {children}\n        </TimerContext.Provider>\n    );\n}","import './LengthControl.styles.css';\nimport {useContext} from 'react'\nimport { TimerContext } from '../../context/timer/Timer.context';\n\nconst LengthControl =({type})=>{\n    const {sessionLength,breakLength,incrementSessionLength,decrementSessionLength,incrementBreakLength,decrementBreakLength, isPaused} = useContext(TimerContext);\n\n    return (\n        <div className='length-control'>\n            <button onClick={isPaused && type==='Session' ?\n             ()=> incrementSessionLength() : isPaused && type==='Break' ?\n             ()=> incrementBreakLength() : null}\n             id={`${type.toLowerCase()}-increment`}>+</button>\n            <span id={`${type.toLowerCase()}-length`}>{\n            type==='Session' ? sessionLength : type==='Break' ? breakLength: null \n            }</span>\n            <button onClick={isPaused && type==='Session' ?\n             ()=> decrementSessionLength() : isPaused && type==='Break' ?\n             ()=> decrementBreakLength() : null} id={`${type.toLowerCase()}-decrement`}>-</button>\n        </div>\n    );\n}\n\nexport default LengthControl","import LengthControl from '../length-control/LengthControl.component';\nimport './LengthController.styles.css';\n\nconst LengthController = ({type})=>{\n    return (\n        <div className='length-controller' >\n            <h2 id={`${type.toLowerCase()}-label`} >{type} Length</h2>\n            <LengthControl type={type}/>\n        </div>\n    );\n}\n\nexport default LengthController;","import './LengthControllersContainer.styles.css';\nimport LengthController from '../length-controller/LengthController';\n\nconst LengthControllersContainer = ()=>{\n\n    return(\n        <div className='length-controllers-container'>\n            <LengthController type={'Break'}/>\n            <LengthController type= {'Session'}/>\n        </div>\n    );\n}\n\nexport default LengthControllersContainer","import './Timer.styles.css';\nimport {useEffect, useContext, useRef} from 'react';\nimport {TimerContext} from '../../context/timer/Timer.context';\n\nconst formatTime = (time)=> time > 9 ? time : '' + 0 + time\n\nconst Timer=()=>{ \n\n    const {isPaused,time, setTime, isSessionTime,isBreakTime,setBreakTime, setSessionTime, breakLength, sessionLength} = useContext(TimerContext);\n\n    const audio = document.getElementById('beep');\n\n    let minutes = Math.floor(time/60);\n    let seconds = Math.floor(time%60);\n\n\n    const interval = useRef(null);\n\n\n    const countDown=()=>{\n        if(isPaused) return\n        setTime((prev)=>{\n            if(isSessionTime){\n                if(prev===0){\n                   audio.play();\n                    setBreakTime(true);\n                    setSessionTime(false);\n                    return breakLength*60\n                }\n                return prev - 1\n            }\n            if(isBreakTime){\n                if(prev===0){\n                    audio.play();\n                    setSessionTime(true);\n                    setBreakTime(false);\n                    return sessionLength*60\n                }\n                return prev - 1\n            }\n        })\n    }\n\n    useEffect(()=>{\n         interval.current = setInterval(countDown,1000);\n         return ()=> clearInterval(interval.current)\n    },[isPaused,isSessionTime,isBreakTime])\n\n    return(\n        <div className='timer'>\n            <h2 id='timer-label' >{!isSessionTime ? 'Break':'Session'}</h2>\n            <h2 id='time-left'>{`${formatTime(minutes)}:${formatTime(seconds)}`}</h2>\n            <audio id=\"beep\" preload=\"auto\" src=\"https://soundbible.com/mp3/Radio%20Interruption-SoundBible.com-1434341263.mp3\"></audio>\n        </div>\n    );\n}\n\nexport default Timer;","import './TimerControllers.styles.css';\nimport {useContext} from 'react';\nimport {TimerContext} from '../../context/timer/Timer.context'\nconst TimerControllers=()=>{\n    const {reset, setIsPaused} = useContext(TimerContext)\n    return(\n        <div className='timer-controller'>\n            <button  onClick={()=> setIsPaused(prev => !prev)} id='start_stop'>start-stop</button>\n            <button id='reset' onClick={()=> reset()}>reset</button>\n        </div>\n    );\n}\nexport default TimerControllers","import Title from './components/title/Title.component';\nimport LengthControllersContainer from './components/length-controllers-container/LengthControllersContainer.component';\nimport Timer from './components/timer/Timer.component';\nimport TimerControllers from './components/timer-controllers/TimerControllers.component';\nimport './App.css'\nimport { TimerContextProvider } from './context/timer/Timer.context';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title/>\n      <TimerContextProvider>\n        <LengthControllersContainer/>\n        <Timer/>\n        <TimerControllers/>\n      </TimerContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}